@using WinProApp.Resources
@using Microsoft.AspNetCore.Localization;
@model WinProApp.ViewModels.Warehouse.GRN.DetailsViewModel;
@{
    ViewData["Title"] = @WebResource.GRN + " " + @WebResource.Details;
    string reportPath = "/Reports/";
}

<div class="row">
    <div class="col-md-12">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="Id" type="hidden" />
            <input asp-for="FromStoreId" type="hidden" />
            <input asp-for="ToStoreId" type="hidden" />
            <div class="row card card-success">
                <div class="card-header"><h3 class="card-title">@WebResource.Details</h3></div>
                <div class="card-body col-md-12 row">
                    <div class="form-floating col-md-2">
                        <label asp-for="IbtId">@WebResource.IBT</label>
                        <input asp-for="IbtId" type="text" class="form-control" readonly />
                    </div>

                    <div class="form-floating col-md-2">
                        <label for="Date">@WebResource.Date</label>
                    <input id="Date" name="Date" class="form-control datefield" readonly />
                    </div>

                    <div class="form-floating col-md-8">
                        <label asp-for="Description">@WebResource.Description</label>
                    <input asp-for="Description" class="form-control" readonly />
                    </div>
                </div>
            </div>
            <hr />


            <div class="card-body col-md-12 row">
                <table id="tblItems" class="table table-striped table-bordered table-responsive">
                    <thead>
                        <tr>
                            <th class="col-md-3">@WebResource.Barcode</th>
                            <th class="col-md-4">@WebResource.Description</th>
                            <th class="col-1">@WebResource.Box @WebResource.No</th>
                            <th class="col-1">@WebResource.Qty</th>
                            <th class="col-1">@WebResource.Received @WebResource.Qty</th>
                            <th class="col-1">@WebResource.Price</th>
                            <th class="col-1">%</th>
                            <th class="col-1">@WebResource.Retail</th>
                            <th class="col-1">@WebResource.Total</th>
                            @*  <th class="col"></th>*@
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>



            <div class="row card card-success" style="margin-top:20px; padding-top:7px;">
                <div class="row col-md-12">
                    <div class="form-floating col-md-10" style="text-align:right;">
                        <label for="Total" style="margin-left:7px;">@WebResource.Total @WebResource.Qty</label>
                    </div>
                    <div class="form-floating col-md-2">
                        <input type="text" name="QtyTotal" id="QtyTotal" class="form-control" value="" style="text-align:right;" readonly />
                    </div>
                </div>
                <div class="row col-md-12">
                    <div class="form-floating col-md-10" style="text-align:right;">
                        <label for="Total" style="margin-left:7px;">@WebResource.Total @WebResource.Received @WebResource.Qty</label>
                    </div>
                    <div class="form-floating col-md-2">
                        <input type="text" name="QtyRTotal" id="QtyRTotal" class="form-control" value="" style="text-align:right;" readonly />
                    </div>
                </div>
                <div class="row col-md-12">
                    <div class="form-floating col-md-10" style="text-align:right;">
                        <label for="Total" style="margin-left:7px;">@WebResource.Total @WebResource.Amount</label>
                    </div>
                    <div class="form-floating col-md-2">
                        <input type="text" name="Total" id="Total" class="form-control" value="" style="text-align:right;" readonly />
                    </div>
                </div>

            </div>

            <div class="row col-md-12">
                <div class="form-floating col-md-2">
                    <label asp-for="Status">@WebResource.Status</label>
                    <select asp-for="Status" class="form-control">
                    @if(Model.Status == false)
                    {
                        <option value="false">@WebResource.OnHold</option>
                    }
                    else
                    {
                        <option value="true">@WebResource.Approved</option>
                    }
                    
                    </select>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>
            </div>
    </div>
    <hr />
    <input id="btnPrint" type="button" class="w-100 btn btn-lg btn-primary col-md-3" value="@WebResource.Print" style="margin-top:25px;" />
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script type="text/javascript">
        

        $(".datefield").datepicker({
            dateFormat: 'yy-mm-dd',
            changeMonth: true,
            changeYear: true,
            todayHighlight: true,
            autoclose: true
        });

     //   let curStoreId = "@ViewBag.CurretStoreId";
        $("#Date").val("@Model.Date");

        var vatx = "@ViewBag.VatPercentage";


       

        $(document).on("keyup", ".PrecentX", function () {
            let price = $(this).parent().parent().find(".itemcostx").val();
            let precent = $(this).val();
            let tot = 0;

            if (parseFloat(price) > 0 && parseFloat(precent) > 0) {
                tot = (parseFloat(price) + parseFloat(parseFloat(price) * (parseFloat(precent) / 100)));
            }
            else {
                tot = 0;
            }

            $(this).parent().parent().find(".RetailsX").val(tot.toFixed(2));
        });

        $(document).on("keyup", ".QtyRX", function () {
            let price = $(this).parent().parent().find(".itemcostx").val();
            let qty = $(this).val();
            let tot = 0;

            if (parseFloat(price) > 0 && parseFloat(qty) > 0) {
                tot = (parseFloat(price) * parseFloat(qty));
            }
            else {
                tot = 0;
            }

            $(this).parent().parent().find(".itemtotlx").text(tot.toFixed(2));
            $(this).parent().parent().find(".itemtotx").val(tot.toFixed(2));

            calculateTotals();
        });

        $(document).on("keyup", ".itemcostx", function () {
            let price = $(this).val();
            let qty = $(this).parent().parent().find(".QtyRX").val();
            let tot = 0;

            if (parseFloat(price) > 0 && parseFloat(qty) > 0) {
                tot = (parseFloat(price) * parseFloat(qty));
            }
            else {
                tot = 0;
            }

            $(this).parent().parent().find(".itemtotlx").text(tot.toFixed(2));
            $(this).parent().parent().find(".itemtotx").val(tot.toFixed(2));


            let precent = $(this).parent().parent().find(".PrecentX").val();
            let rtot = 0;

            if (parseFloat(price) > 0 && parseFloat(precent) > 0) {
                rtot = (parseFloat(price) + parseFloat(parseFloat(price) * (parseFloat(precent) / 100)));
            }
            else {
                rtot = 0;
            }

            $(this).parent().parent().find(".RetailsX").val(rtot.toFixed(2));

            calculateTotals();
        });

        function calculateTotals() {
            let tot = 0;
            let totQty = 0;

            $(".itemtotx").each(function () {
                if ($(this).val() > 0) {
                    tot = parseFloat(tot) + parseFloat($(this).val());
                }
            });

            $(".QtyRX").each(function () {
                if ($(this).val() > 0) {
                    totQty = parseInt(totQty) + parseInt($(this).val());
                }
            });

            $("#QtyRTotal").val(totQty);
            $("#Total").val(tot.toFixed(2));
        }


      
        function GetItemRows(Id) {
            if (parseInt(Id) > 0) {
                $.ajax({
                    url: "/Warehouse/GetGrnItems/" + Id,
                    type: "GET",
                    dataType: "json",
                    success: function (data) {
                        var result = JSON.parse(JSON.stringify(data));
                        let totQty = 0;
                        let totRQty = 0;
                        let tot = 0;
                        for (i = 0; i < result.length; i++) {
                            let itemId = result[i].Id;
                            let productId = parseInt(result[i].ProductId) > 0 ? result[i].ProductId : 0;
                            let code = result[i].Barcode;
                            let desc = result[i].DescriptionEnglish;
                            let descab = result[i].DescriptionArabic;
                            let box = result[i].BoxNo;
                            let qty = result[i].Qty;
                            let rqty = parseInt(result[i].ReceivedQty) > 0 ? result[i].ReceivedQty : '';
                            let price = result[i].Price;
                            let precent = parseFloat(result[i].Precentage) > 0 ? result[i].Precentage : '';
                            let retail = parseFloat(result[i].RetailPrice) > 0 ? result[i].RetailPrice : '';
                            let total = 0;

                            total = (parseFloat(qty) * parseFloat(price));
                            totQty = parseInt(totQty) + parseInt(qty);
                            totRQty = parseInt(totRQty) + parseInt(rqty);
                            tot = parseFloat(tot) + parseFloat(total);

                            let itemCode = '<input type="hidden" name="ItemId" class="BoxX" value="' + itemId + '" /><input type="hidden" name="ItemProductId" value="' + productId + '" /><input type="hidden" name="Barcode" value="' + code + '" />' + code;
                            let itemDesc = '<input type="hidden" name="ItemDescription" value="' + desc + '" /><input type="hidden" name="ItemDescriptionAb" value="' + descab + '" />' + desc + "/ " + descab;
                            let itemBoxNo = '<input type="hidden" name="ItemBoxNo" class="BoxX" value="' + box + '" />' + box;
                            let itemQty = '<input type="hidden" name="ItemQty" class="QtyX" value="' + qty + '" />' + qty;
                            let itemRQty = '<input type="number" name="ItemRQty" class="QtyRX" value="' + rqty + '"  style="width:80px; text-align:right;" readonly />';
                            let itemPrice = '<input type="number" name="itemPrice" class="itemcostx" value="' + price + '"  style="width:110px; text-align:right;" readonly />';
                            let itemPrecent = '<input type="number" name="itemPrecent" class="PrecentX" value="' + precent + '"  style="width:50px; text-align:right;" readonly />';
                            let itemRetail = '<input type="number" name="itemRetail" class="RetailsX" value="' + retail + '" style="width:110px; text-align:right;" readonly />';
                            let itemTotal = '<input type="hidden" name="itemTotal" class="itemtotx" value="' + total + '" /><span class="itemtotlx">' + total + '</span>';
                            let btn = '<a class="removeRow" style="font-size:22px; padding:5px; cursor:pointer;"><i class="fa fa-times"></i></a>';

                            let rowId = "Row_" + Date.now() + "_" + new Date().getMilliseconds();
                            var itemCell = "<tr id='" + rowId + "'>";

                            itemCell += '<td>' + itemCode + '</td>';
                            itemCell += '<td>' + itemDesc + '</td>';
                            itemCell += '<td>' + itemBoxNo + '</td>';
                            itemCell += '<td>' + itemQty + '</td>';
                            itemCell += '<td>' + itemRQty + '</td>';
                            itemCell += '<td>' + itemPrice + '</td>';
                            itemCell += '<td>' + itemPrecent + '</td>';
                            itemCell += '<td>' + itemRetail + '</td>';
                            itemCell += '<td>' + itemTotal + '</td>';
                            //  itemCell += '<td>' + btn + '</td>';
                            itemCell += '</tr>';
                            $('#tblItems tbody').append(itemCell);

                        }
                        $("#QtyTotal").val(totQty);
                        $("#QtyRTotal").val(totRQty);
                        $("#Total").val(tot.toFixed(2));
                    },
                    error: function (result) {
                        console.log(result);
                    }
                });
            }
        }



        GetItemRows("@Model.Id");


        function ReportPopup(Doc) {
            let FileName = "@reportPath" + Doc;
            printJS(FileName);
        }

        $("#btnPrint").click(function () {
            let Id = $("#Id").val();
            $.ajax({
                url: "/Warehouse/GrnReportCreate/" + Id,
                type: "POST",
                dataType: "json",
                data: { id: Id },
                success: function (data) {
                    var result = JSON.parse(JSON.stringify(data));
                    ReportPopup(result);
                },
                error: function (data) {
                    swal({
                        type: 'error',
                        title: "@Html.Raw(WebResource.Oops)",
                        text: "@Html.Raw(WebResource.SomethingWentWrong)",
                    });
                }
            });
        });

    </script>
}
@using WinProApp.Resources
@using Microsoft.AspNetCore.Localization;
@using WinProApp.ViewModels.Merchant.SelectedItem;
@model AddEditViewModel;
@{
    ViewData["Title"] = "Manage Selected Item Discounts";
    //  Layout = "~/Views/Shared/_DashBoardLayout.cshtml";
}

<style>
    #tblDataTable_filter > label {
        width: 60%;
    }

        #tblDataTable_filter > label > .form-control-sm {
            width: 87%;
        }

    #tblProductDataTable_filter > label {
        width: 60%;
    }

        #tblProductDataTable_filter > label > .form-control-sm {
            width: 87%;
        }

</style>

<div class="row card p-xl-5">
    
    <div class="col-sm-12">
        <hr />
        <h3>@WebResource.Product @WebResource.List</h3>
        <div class="row" style="margin-bottom:15px;">
            <h5>Search Filters</h5>
            <div class="form-floating col-md-3">
                <label for="CategoryId">@WebResource.Category</label>
                <select id="CategoryId" name="CategoryId" class="form-control" asp-items="@ViewBag.categoryInfo">
                    <option value="0">All</option>
                </select>
            </div>
            <div class="form-floating col-md-3">
                <label for="VendorId">@WebResource.Vendor</label>
                <select id="VendorId" name="VendorId" class="form-control" asp-items="@ViewBag.vendorInfo">
                    <option value="0">All</option>
                </select>
            </div>
        </div>
        <table id="tblProductDataTable" class="table table-striped table-bordered dataTable table-hover">
            <thead>
                <tr>
                    <th>
                        @WebResource.ID
                    </th>
                    <th>
                        @WebResource.Barcode
                    </th>
                    <th>
                        @WebResource.Product @WebResource.Name
                    </th>
                    <th>
                        @WebResource.Category
                    </th>
                    <th>
                        @WebResource.Vendor
                    </th>
                    <th>
                        @WebResource.Price
                    </th>                    
                    <th>@WebResource.Select <input type="checkbox" name="ChAllProduct" id="ChAllProduct" title="All" value="all" style="transform: scale(1.5); margin:0 10px;" /> All </th>
                </tr>
            </thead>
            <tbody>
            </tbody>
            <tfoot></tfoot>
        </table>
    </div>
    <div class="row col-md-12">
        <div class=" col-md-10"></div>
            <div class="col-md-2" style="text-align:right;">
            <input type="button" id="btnItemsAdd" name="btnItemsAdd" class="btn-sm bg-gradient-dark" value="Add Items to List" style="margin-top:15px; float:right;" />
            </div>
    </div>
    
</div>

<div class="row">
    <div class="col-md-12">
        <h5 id="subTitle">@WebResource.Create @WebResource.Selected @WebResource.Items @WebResource.Discount</h5>
        <form id="manageForm" method="post" asp-action="CreateUpdateSelectedItemDiscount" asp-controller="Merchant" method="post" data-ajax-method="post" data-ajax="true" data-ajax-failure="OnFailure" data-ajax-success="OnSuccess">
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" value="0" />
            <div class="row">
                <div class="form-floating col">
                    <label asp-for="StoreId">@WebResource.Store</label>
                    <select id="StoreId" name="StoreId" class="form-control" asp-items="@ViewBag.StoreInfo">
                        <option value="0">All</option>
                    </select>
                    <span asp-validation-for="StoreId" class="text-danger"></span>
                </div>
               
                <div class="form-floating col">
                    <label asp-for="IsMembersOnly">@WebResource.Type</label>
                    <select id="IsMembersOnly" name="IsMembersOnly" class="form-control">
                        <option value="false">All Customers</option>
                        <option value="true">Members Only</option>
                    </select>
                    <span asp-validation-for="IsMembersOnly" class="text-danger"></span>
                </div>
                <div class="form-floating col">
                    <label asp-for="StartDate">@WebResource.Start @WebResource.Date</label>
                    <input type="text" id="StartDate" name="StartDate" class="form-control datefield" value="" />
                    <span asp-validation-for="StartDate" class="text-danger"></span>
                </div>
                <div class="form-floating col">
                    <label asp-for="EndDate">@WebResource.End @WebResource.Date</label>
                    <input type="text" id="EndDate" name="EndDate" class="form-control datefield" value="" />
                    <span asp-validation-for="EndDate" class="text-danger"></span>
                </div>

               @* <div class="form-floating col">
                    <label asp-for="DiscountType">@WebResource.Discount</label>
                    <select id="DiscountType" name="DiscountType" class="form-control">
                        <option value="precentage">%</option>
                        <option value="fixed">Fixed</option>
                    </select>
                    <span asp-validation-for="DiscountType" class="text-danger"></span>
                </div>
                <div class="form-floating col">
                    <label asp-for="DiscountAmount">@WebResource.Amount</label>
                    <input asp-for="DiscountAmount" class="form-control" />
                    <span asp-validation-for="DiscountAmount" class="text-danger"></span>
                </div>*@
               @* <div class="form-floating col">
                    <label asp-for="StartAmount">@WebResource.Min @WebResource.Invoice @WebResource.Amount</label>
                    <input asp-for="StartAmount" class="form-control" />
                    <span asp-validation-for="StartAmount" class="text-danger"></span>
                </div>*@
                <div class="form-floating col">
                    <label asp-for="Approved">@WebResource.Approved</label>
                    <select id="Approved" name="Approved" class="form-control">
                        <option value="false">No</option>
                        <option value="true">Yes</option>
                    </select>
                    <span asp-validation-for="Approved" class="text-danger"></span>
                </div>
            </div>

            <div class="row" style="margin-top:20px; margin-bottom:15px;">
                <di@*v class="form-floating col-md-4">
                    <input id="ProductId" name="ProductId" type="hidden" value="0" />
                    <label for="Barcode">@WebResource.Product @WebResource.Barcode</label>
                    <input name="txtBarcode" id="txtBarcode" class="form-control" />
                </div>*@
                <div@* class="form-floating col-md-1">
                    <label for="btnAdd">&nbsp;</label>
                    <input type="button" id="btnAdd" name="btnAdd" class="btn-sm bg-gradient-dark" value="Add Item" style="margin-top:35px;" />
                </div>*@
                <div id="Block04A" class="form-floating col-md-6">
                    <label>&nbsp;</label>
                    <br />
                    <button id="btnUpdatePriceFromExcel" type="button" class="btn btn-lg btn-success col-md-6">Add Items from Excel</button>
                    <input type="button" id="btnUDownload" value="@WebResource.Download @WebResource.Sample @WebResource.Format" class="btn btn-outline-success btn-outline-info" />
                </div>
            </div>

             <div class="row col-md-12">
                 <h4>Current Selected Items</h4>
                <table id="tblCurItemTable" class="table table-striped table-bordered dataTable table-hover">
                    <thead>
                        <tr>
                            <th>Barcode</th>
                            <th>Price</th>
                            <th>Discount (%)</th>
                            <th>Discount Amt</th>
                            <th>New Price</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>

                    </tbody>
                    </table>

                 </div>

            <div style="width:100%; padding:5px; height:10px;">&nbsp;</div>
            <button id="saveBtn" type="submit" class="w-100 btn btn-lg btn-primary col-md-3">@WebResource.Save</button>
            <input type="button" id="reloadBtn" type="submit" class="w-100 btn btn-lg btn-primary col-md-3" value="@WebResource.Refresh" />
        </form>
    </div>

</div>

<div class="row card p-xl-5">
    <div class="col-sm-12">
        <hr />
        <h3>@WebResource.Discount @WebResource.List</h3>
        <table id="tblDataTable" class="table table-striped table-bordered dataTable table-hover">
            <thead>
                <tr>
                    <th>
                        @WebResource.ID
                    </th>
                    <th>
                        @WebResource.Store
                    </th>
                    <th>
                        @WebResource.Type
                    </th>
                    <th>
                        @WebResource.Start @WebResource.Date
                    </th>
                    <th>
                        @WebResource.End @WebResource.Date
                    </th>
                    <th>
                        @WebResource.Discount %
                    </th>
                    <th>
                        @WebResource.Fixed  @WebResource.Discount
                    </th>
                    <th>
                        @WebResource.Min @WebResource.Invoice @WebResource.Amount
                    </th>
                    <th>
                        @WebResource.Approved
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
            </tbody>
            <tfoot></tfoot>
        </table>
    </div>
</div>

<div class="modal fade" id="uploadModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content" style="margin-top:45%;">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" style="float:right;position:absolute; right:5px;">&times;</button>
                <h4 class="modal-title">Add Items from Excel</h4>
            </div>
            <div class="modal-body">
                <div class="row col-md-12">
                    <div class="form-floating col-md-8">
                        <label for="UploadItems">@WebResource.Upload</label>
                        <input type="file" id="UploadItems" name="UploadItems" class="form-control" accept=".xlsx" />
                        <span id="ImportMsgBlock" style="padding:10px; margin-top:20px; text-align:center; font-weight:bold; color:darkgreen; display:none;">Processing... wait..</span>
                    </div>
                    <div class="form-floating col-md-4">
                        <div class="form-floating col-md-12" style="height:30px;">&nbsp;</div>
                        <input type="button" id="btnItemsUpload" class="btn btn-outline-success" value="Upload" />
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script type="text/javascript">
        $("form").attr('autocomplete', 'off');
        var curId = $("#Id").val();
        var msg1 = "@Html.Raw(WebResource.CreatedSuccessfully)";
        var msg2 = "@Html.Raw(WebResource.RecordCreated)";

        function OnSuccess(data, status, xhr) {
            if (parseInt(curId) > 0) {
                msg1 = "@Html.Raw(WebResource.UpdatedSuccessfully)";
                msg2 = "@Html.Raw(WebResource.RecordUpdated)";
            }
            else {
                msg1 = "@Html.Raw(WebResource.CreatedSuccessfully)";
                msg2 = "@Html.Raw(WebResource.RecordCreated)";
            }
            swal({
                type: 'success',
                title: msg1,
                text: msg2,
                closeOnClickOutside: false,
                closeOnEsc: false,
                button: {
                    className: "btn theme waves-effect waves-light"
                }
            }).then((value) => {
                window.location.replace("/Merchant/SelectedItemDiscount");
            });
        }

        function OnFailure(xhr, status, error) {
            swal({
                type: 'error',
                title: "@Html.Raw(WebResource.Oops)",
                text: "@Html.Raw(WebResource.SomethingWentWrong)",
            }).then(x => {
                Ladda.stopAll();
            });
        }

        $("#btnUpdatePriceFromExcel").click(function () {
            $("#uploadModal").modal();
        });

        $("#btnItemsUpload").click(function () {
            let fileData = new FormData();
            var fileUpload = $("#UploadItems").get(0);
            var upload = fileUpload.files[0];
            fileData.append("upload", upload);

            if ($("#UploadItems").get(0).files.length > 0) {
                $("#ImportMsgBlock").css('display', '');
                $(this).prop('disabled', true);

                $.ajax({
                    url: "/Merchant/ItemUploadForSelectedDiscount",
                    type: "POST",
                    contentType: false,
                    processData: false,
                    data: fileData,
                    success: function (data) {
                        if (data != null) {
                            console.log(data);
                            for (i = 0; i < data.length; i++) {
                                AddRowsFromExcel('0', data[i].ProductId, data[i].Barcode, data[i].OldPrice, data[i].NewPrice, data[i].DiscountPercentage, data[i].DiscountFixed);
                            }
                        }
                        $("#ImportMsgBlock").css('display', 'none');
                        $("#btnItemsUpload").prop('disabled', false);
                        $(".close").trigger('click');
                    },
                    error: function (result) {
                        console.log(result);
                        $("#ImportMsgBlock").css('display', 'none');
                        $("#btnItemsUpload").prop('disabled', false);
                    }
                });
            }
        });

        $("#btnUDownload").click(function () {
            window.location.href = "/Merchant/DownloadSampleForSelectedItems";
        });

        $(".datefield").datepicker({
            dateFormat: 'yy-mm-dd',
            changeMonth: true,
            changeYear: true,
            todayHighlight: true,
            autoclose: true
        });

        $("form").bind("keypress", function (e) {
            if (e.keyCode == 13) {
                return false;
            }
        });

        $(document).ready(function () {
            bindProdctDataTable(0,0,0);
            bindDataTable(0);
           // $("#tblProductDataTable_filter.dataTables_filter").append($("#CategoryId"));
        });

      //  var table1 = $('#tblProductDataTable').DataTable();
        

        function bindDataTable(start) {
            if ($.fn.DataTable.isDataTable("#tblDataTable")) {
                $('#tblDataTable').DataTable().destroy();
            }

            var table = $('#tblDataTable').DataTable(
                {
                    serverSide: true,
                    responsive: true,
                    displayStart: start,
                    iDisplayLength: 20,
                    order: [[1, 'desc']],
                    lengthMenu: [10, 20, 30, 50, 100],
                    sAjaxSource: "/Merchant/GetSelectedItemDiscountList",
                    sServerMethod: "POST",
                    "columns": [
                        {
                            data: "Id",
                            searchable: true,
                            class: "dtr-control"
                        },
                        {
                            data: "StoreName",
                            searchable: true,
                            class: "dtr-control"
                        },
                        {
                            data: "IsMembersOnly",
                            searchable: true,
                            class: "dtr-control"
                        },
                        {
                            data: "StartDate",
                            searchable: true,
                            class: "dtr-control"
                        },
                        {
                            data: "EndDate",
                            searchable: true,
                            class: "dtr-control"
                        },
                        {
                            data: "DiscountPercentage",
                            searchable: true,
                            class: "dtr-control"
                        },
                        {
                            data: "FixedDiscount",
                            searchable: true,
                            class: "dtr-control"
                        },
                        {
                            data: "StartAmount",
                            searchable: true,
                            class: "dtr-control"
                        },
                        {
                            data: "Approved",
                            searchable: true,
                            class: "dtr-control"
                        },
                        {
                            data: "Id",
                            searchable: false,
                            orderable: false,
                            class: "dtr-control",
                            render: function (data, type, row) {
                                var content = '<div style="display:flex">'
                                content += '<a href="JavaScript:" data-toggle="tooltip" data-original-title="Edit" data-flag="edit" title="@WebResource.Edit" data-Id="' + data + '" class="btn btn-primary btn-sm action editInfo"> <i class="fa fa-edit"></i></a>';
                                content += '&nbsp;<a href="JavaScript:" data-toggle="tooltip" data-original-title="Delete" data-flag="Activate" title="@WebResource.Delete" data-Id="' + data + '" class="btn btn-danger btn-sm action removeInfo"><i class="fa fa-times"></i></a>';
                                content += '&nbsp;</div>';

                                return content;
                            }
                        }
                    ],
                });

            // new $.fn.dataTable.FixedHeader(table);
        };


        function bindProdctDataTable(start,categoryId,vendorId) {
            if ($.fn.DataTable.isDataTable("#tblProductDataTable")) {
                $('#tblProductDataTable').DataTable().destroy();
            }

            var table = $('#tblProductDataTable').DataTable(
                {
                    serverSide: true,
                    responsive: true,
                    displayStart: start,
                    iDisplayLength: 10,
                    order: [[1, 'desc']],
                    lengthMenu: [10, 20, 30, 50, 100],
                    sAjaxSource: "/Merchant/GetProductList?catgoryId=" + categoryId + "&vendorId=" + vendorId,
                    sServerMethod: "POST",
                    "columns": [
                        {
                            data: "Id",
                            searchable: true,
                            class: "dtr-control"
                        },
                        {
                            data: "Barcode",
                            searchable: true,
                            class: "dtr-control"
                        },
                        {
                            data: "DescriptionEng",
                            searchable: true,
                            class: "dtr-control"
                        },
                        {
                            data: "CategoryName",
                            searchable: true,
                            class: "dtr-control"
                        },
                        {
                            data: "VendorName",
                            searchable: true,
                            class: "dtr-control"
                        },
                        {
                            data: "OrgPrice",
                            searchable: true,
                            class: "dtr-control priceOfProd"
                        },
                        {
                            data: "Id",
                            searchable: false,
                            orderable: false,
                            class: "dtr-control",
                            render: function (data, type, row) {
                                var content = '<div style="display:flex" class="custom-control custom-checkbox">'
                                content += '<input type="checkbox" class="ProductSelected" name="ChProductId" title="' + row.Barcode + '" value="' + data + '" style="transform: scale(1.5);"/>';
                                content += '&nbsp;</div>';
                                return content;
                            }
                        }
                    ],
                });

            // new $.fn.dataTable.FixedHeader(table);

           
        };
        

        $("#CategoryId").change(function (e) {
            let catId = $(this).val();
            let vendorId = $("#VendorId").val();
            bindProdctDataTable(0, catId, vendorId);
        });

        $("#VendorId").change(function (e) {
            let catId = $("#CategoryId").val();
            let vendorId = $(this).val();
            bindProdctDataTable(0, catId, vendorId);
        });

        function CurrentPageStart() {
            var table = $('#tblDataTable').DataTable();
            var info = table.page.info();
            return info.start;
        }

        $(document).on("click", ".editInfo", function () {
            var subtitle = "@WebResource.Edit" + " " + "@WebResource.Selected" + " " + "@WebResource.Items" + " " + "@WebResource.Discount";
            $("#subTitle").text(subtitle);
            var Id = $(this).attr("data-id");
            curId = Id;
            $.ajax({
                url: "/Merchant/GetSelectedItemDiscountInfo/" + Id,
                type: "GET",
                success: function (data) {
                    var result = JSON.parse(JSON.stringify(data));
                    $("#Id").val(Id);
                    $("#StoreId").val(result.StoreId);
                    $("#IsMembersOnly").val(result.IsMembersOnly);
                    $("#StartDate").val(result.StartDate);
                    $("#EndDate").val(result.EndDate);
                    $("#DiscountType").val(result.DiscountType);
                    if (result.DiscountType == "fixed") {
                        $("#DiscountAmount").val(result.FixedDiscount);
                    }
                    else {
                        $("#DiscountAmount").val(result.DiscountPercentage);
                    }
                    $("#StartAmount").val(result.StartAmount);
                    $("#Approved").val(result.Approved);
                    $('#tblCurItemTable tbody').empty();
                    GetItemsData(Id);
                },
                error: function () {
                    swal({
                        type: 'error',
                        title: "@Html.Raw(WebResource.Oops)",
                        text: "@Html.Raw(WebResource.SomethingWentWrong)",
                    });
                }
            });
        });

        function GetItemsData(Id){
            $.ajax({
                url: "/Merchant/GetSelectedItemDiscountItems/" + Id,
                type: "GET",
                success: function (data) {
                    var result = JSON.parse(JSON.stringify(data));
                    for(i=0; i<result.length;i++){
                        AddRows(result[i].Id, result[i].ProductId, result[i].Barcode);
                    }
                },
                error: function () {
                    swal({
                        type: 'error',
                        title: "@Html.Raw(WebResource.Oops)",
                        text: "@Html.Raw(WebResource.SomethingWentWrong)",
                    });
                }
            });
        }

        $(document).on("click", ".removeInfo", function () {
            var Id = $(this).attr("data-id");
            swal({
                title: "@Html.Raw(WebResource.Confirm)",
                text: "@Html.Raw(WebResource.DeleteConfirmMessage)",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: " @Html.Raw(WebResource.Yes) ",
                cancelButtonText: " @Html.Raw(WebResource.No) ",
            });

            $(".swal2-confirm").on("click", function () {
                $.ajax({
                    url: "/Merchant/DeleteSelectedItemDiscount/" + Id,
                    type: "POST",
                    contentType: false,
                    cache: false,
                    processData: false,
                    success: function (data) {
                        location.reload();
                    },
                    error: function (data) {
                        swal({
                            type: 'error',
                            title: "@Html.Raw(WebResource.Oops)",
                            text: "@Html.Raw(WebResource.SomethingWentWrong)",
                        });
                    }
                });
            });
        });

        $("#reloadBtn").click(function () {
            location.reload();
        })

        $("#txtBarcode").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Merchant/GetProductBarcodes",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        if (!data.length) {
                            var result = [
                                {
                                    label: 'No matches found',
                                    value: response.term
                                }
                            ];
                            response(result);
                        }
                        else {
                            response($.map(data, function (item) {
                                return { label: item.BarcodeWithName, value: item.Barcode, title: item.Id };
                            }))
                        }
                    },
                    error: function (result) {
                        console.log(result);
                    }
                })
            },
            minLength: 1,
            select: function (event, ui) {
                $("#ProductId").val('0');
                $("#txtBarcode").val(ui.item.value);
                $("#ProductId").val(ui.item.title);
            }
        });

         $("#txtBarcode").bind("keypress",function(e){
             if(e.keycode==13){
                 $("#btnAdd").trigger("click");
             }
         });

        $(document).on("click", ".ProductSelected", function() {
            let allSelected = "yes";
            $(".ProductSelected").each(function () {
                if(!$(this).is(':checked'))
                {
                    allSelected = "no";
                    $("#ChAllProduct").prop('checked', false);
                }
            });

            if(allSelected == "yes"){
                $("#ChAllProduct").prop('checked', true);
            }
        });

        $("#ChAllProduct").click(function(){
            if($(this).is(':checked')){
                $(".ProductSelected").each(function () {
                    $(this).prop('checked', true);
                });
            }
            else{
                $(".ProductSelected").each(function () {
                    $(this).prop('checked', false);
                });
            }
        });

        $(document).on('keypress', '.numberonly', function(e){
              var charCode = (e.which) ? e.which : event.keyCode
                if (String.fromCharCode(charCode).match(/[^0-9]/g))
                    return false;
        });

        function AddRowsFromExcel(itemId, productId, strBarcode, prodPrice, newPrice, discPerc, discFix ){
            let itemX = '<input type="hidden" name="ItemId" value="' + itemId + '" /><input type="hidden" name="ItemProductId" class="itemProductIdx" value="' + productId + '" /><input type="hidden" name="ItemBarcode" class="productBarcodeX" value="' + strBarcode + '" />' + strBarcode;
            let btn = '<a class="removeRow" data-id="' + itemId + '" style="font-size:22px; padding:5px; cursor:pointer;"><i class="fa fa-times"></i></a>';

            let rowId = "Row_" + Date.now() + "_" + new Date().getMilliseconds();
            var itemCell = "<tr id='" + rowId + "'>";
            itemCell += '<td>' + itemX + '</td>';
            itemCell += '<td class="txtPriceOfProd">' + prodPrice + '</td>';
            itemCell += '<td><input type="text" class="txtDiscPercent" name="txtDiscPercent" value="' + discPerc + '" class="form-control numberonly" /></td>';
            itemCell += '<td><input type="text" class="txtDiscFixed" name="txtDiscFixed" value="' + discFix + '" class="form-control numberonly" /></td>';
            itemCell += '<td><input type="text" class="txtNewPriceProd" name="txtNewPriceProd" value="' + newPrice + '" readonly /><br/><span class="newPriceError" style="color:red;display:none;"></span></td>';
            itemCell += '<td>' + btn + '</td>';
            itemCell += '</tr>';

            $('#tblCurItemTable tbody').append(itemCell);
        }

        function AddRows(itemId, productId, strBarcode, prodPrice){
            let itemX = '<input type="hidden" name="ItemId" value="' + itemId + '" /><input type="hidden" name="ItemProductId" class="itemProductIdx" value="' + productId + '" /><input type="hidden" name="ItemBarcode" class="productBarcodeX" value="' + strBarcode + '" />' + strBarcode;
            let btn = '<a class="removeRow" data-id="' + itemId + '" style="font-size:22px; padding:5px; cursor:pointer;"><i class="fa fa-times"></i></a>';

            let rowId = "Row_" + Date.now() + "_" + new Date().getMilliseconds();
            var itemCell = "<tr id='" + rowId + "'>";
            itemCell += '<td>' + itemX + '</td>';
            itemCell += '<td class="txtPriceOfProd">' + prodPrice + '</td>';
            itemCell += '<td><input type="text" class="txtDiscPercent" name="txtDiscPercent" value="0" class="form-control numberonly" /></td>';
            itemCell += '<td><input type="text" class="txtDiscFixed" name="txtDiscFixed" value="0" class="form-control numberonly" /></td>';
            itemCell += '<td><input type="text" class="txtNewPriceProd" name="txtNewPriceProd" value="' + prodPrice + '" readonly /><br/><span class="newPriceError" style="color:red;display:none;"></span></td>';
            itemCell += '<td>' + btn + '</td>';
            itemCell += '</tr>';

            $('#tblCurItemTable tbody').append(itemCell);
        }

        $(document).on("keyup", ".txtDiscPercent", function(){
            let percentX = $(this).val();
            var orgPrice = $(this).parent().parent().find(".txtPriceOfProd").text();
            if (parseFloat(percentX) > 0) {
                var newPrice = parseFloat(parseFloat(orgPrice) - (parseFloat(orgPrice) * (parseFloat(percentX) / 100))).toFixed(2);
                $(this).parent().parent().find(".txtNewPriceProd").val(newPrice);
                $(this).parent().parent().find(".txtDiscFixed").val('0');
            }
            else {
                $(this).parent().parent().find(".txtNewPriceProd").val(orgPrice);
                $(this).parent().parent().find(".txtDiscFixed").val('0');
                $(this).parent().parent().find(".txtDiscPercent").val('0');
            }
        });

        $(document).on("keyup", ".txtDiscFixed", function(){
            let fixedX = $(this).val();
            var orgPrice = $(this).parent().parent().find(".txtPriceOfProd").text();
            if (parseFloat(fixedX) > 0) {
                var newPrice = parseFloat(parseFloat(orgPrice) - parseFloat(fixedX)).toFixed(2);
                if(newPrice > 0) {
                    $(this).parent().parent().find(".txtNewPriceProd").val(newPrice);
                    $(this).parent().parent().find(".txtDiscPercent").val('0');

                    $(this).parent().parent().find(".newPriceError").css("display", "none");
                } else {
                    $(this).parent().parent().find(".newPriceError").css("display", "block");
                    $(this).parent().parent().find(".newPriceError").text('Discount Amount cannot be more than original price');
                }
            }
            else {
                $(this).parent().parent().find(".txtNewPriceProd").val(orgPrice);
                $(this).parent().parent().find(".txtDiscPercent").val('0');
                $(this).parent().parent().find(".txtDiscFixed").val('0');
                $(this).parent().parent().find(".newPriceError").css("display", "none");
            }
        });

        $("#btnItemsAdd").click(function () {
             let dt1 = $("#StartDate").val();
             let alreadyinother = "";
             let alreadyInCurlist = "";
            if($.trim(dt1) != "")
            {
                $(".ProductSelected").each(function () {
                    if($(this).is(':checked'))
                    {
                        var code = $(this).attr('title');
                        var productId = $(this).val();
                        let status = ValidateItem(productId);
                        let status1 = ValidateInCurrentList(productId);
                        if (parseInt(productId) > 0)
                        {
                            if (status == "yes" && status1 == "yes")
                            {
                                var orgPrice = $(this).parent().parent().parent().find(".priceOfProd").text();
                                AddRows('0', productId, code, orgPrice);

                                $(this).prop('checked',false);
                            }
                            else{
                                if (status == "no")
                                {
                                    if(alreadyinother == ""){
                                        alreadyinother = code
                                    }
                                    else{
                                        alreadyinother += ", " +  code
                                    }
                                }
                                if (status1 == "no")
                                {
                                    if(alreadyInCurlist == ""){
                                        alreadyInCurlist = code
                                    }
                                    else{
                                        alreadyInCurlist += ", " + code
                                    }
                                }
                            }
                        }
                    }
                });
                $("#ChAllProduct").prop('checked',false);
                let strmsg = "";
                if(alreadyInCurlist != ""){
                    strmsg = "Following items already in current list \n" + alreadyInCurlist;
                }
                if (alreadyinother != ""){
                    strmsg = "\nFollowing items already in another list \n" + alreadyinother;
                }
                 if(alreadyInCurlist != "" || alreadyinother != ""){
                    swal({
                        type: 'error',
                        title: "@Html.Raw(WebResource.Oops)",
                        text: strmsg,
                    });
                 }
            }
            else{
                swal({
                    type: 'error',
                    title: "@Html.Raw(WebResource.Oops)",
                    text: "Please enter start and end date first!",
                });
            }
        });

        $("#btnAdd").click(function(){
            let dt1 = $("#StartDate").val();
            if($.trim(dt1) != "")
            {
                var code = $("#txtBarcode").val();
                var productId = $("#ProductId").val();

                if (parseInt(productId) > 0){
                    let status = ValidateItem(productId);
                    let status1 = ValidateInCurrentList(productId);
                    if (status == "yes" && status1 == "yes" ) {
                        AddRows('0', productId, code);
                        $("#txtBarcode").val('');
                        $("#ProductId").val('0');
                    }
                    else{
                        if (status == "no"){
                        swal({
                            type: 'error',
                            title: "@Html.Raw(WebResource.Oops)",
                            text: "Item already exist in another active one!",
                        });
                        }
                        if (status1 == "no") {
                            swal({
                                type: 'error',
                                title: "@Html.Raw(WebResource.Oops)",
                                text: "Item already exist in current list!",
                            });
                        }
                    }
                }
            }
            else{
                swal({
                    type: 'error',
                    title: "@Html.Raw(WebResource.Oops)",
                    text: "Please enter start and end date first!",
                });
            }

        });

        function ValidateItem(productId){
            let dt1 = $("#StartDate").val();
            let rId = $("#Id").val();
            let result = "yes";
            $.ajax({
                url: "/Merchant/ValidateSelectedItem",
                    type: "POST",
                    dataType: "json",
                data: { startDt: dt1, productId: productId, recordId: rId },
                        success: function (data) {
                       if(data.id == 1){
                           result = "no";
                           return result;
                       }                
                    },
                    error: function (result) {
                        console.log(result);
                    }
                });

            return result;
        }

        function ValidateInCurrentList(productId){
            let result = "yes";
            $(".itemProductIdx").each(function(){
                if ($(this).val() == productId){
                    result = "no";
                    return result;
                }
            });
            return result;
        }

        $(document).on("click", ".removeRow", function () {
            let Id = $(this).attr('data-id');
            if(Id=='0'){
                $(this).parent().parent().remove();
            }
            else{
                removeItem(Id);
                $(this).parent().parent().remove();
            }
            
        });

        function removeItem(Id){
            $.ajax({
                url: "/Merchant/DeleteSelectedItemSingleItem/" + Id,
                type: "POST",
                dataType: "json",
                success: function (data) {
                     console.log(data.id);
                },
                error: function (result) {
                    console.log(result);
                }
            });
        }

    </script>
}
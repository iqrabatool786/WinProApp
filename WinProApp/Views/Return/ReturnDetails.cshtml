@using WinProApp.Resources
@using Microsoft.AspNetCore.Localization;
@model WinProApp.ViewModels.Warehouse.Returns.EditViewModel;
@{
    ViewData["Title"] = @WebResource.Returns + " " + @WebResource.Details;
    string documentPath = "/Docs/SupplierInvoice/" + Model.AttachedDoc;
}

<div class="row">
    <div class="col-md-12">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="row card card-success">
                <div class="card-header"><h3 class="card-title">@WebResource.Supplier @WebResource.Details</h3></div>
                <div class="card-body col-md-12 row">
                    <div class="form-floating col-md-3">
                        <label asp-for="SupplierId">@WebResource.Supplier</label>
                    <select asp-for="SupplierId" class="form-control" asp-items="@ViewBag.Suppliers" disabled>
                        </select>
                        <span asp-validation-for="SupplierId" class="text-danger"></span>
                    </div>

                    <div class="form-floating col-md-2">
                        <label for="BpCode">@WebResource.Bpcode</label>
                        <input id="BpCode" name="BpCode" class="form-control" readonly />
                    </div>

                    <div class="form-floating col-md-3">
                        <label for="Address">@WebResource.Address</label>
                        <input type="text" id="Address" name="Address" class="form-control" readonly />
                    </div>
                    <div class="form-floating col-md-2">
                        <label for="VatNo">@WebResource.VatNo</label>
                        <input id="VatNo" name="VatNo" class="form-control" readonly />
                    </div>
                    <div class="form-floating col-md-2">
                        <label for="Balance">@WebResource.Balance</label>
                        <input id="Balance" name="Balance" class="form-control" readonly />
                    </div>
                </div>
            </div>
            <hr />
            <div class="row card card-success">
                <div class="card-header"><h3 class="card-title">@WebResource.Returns @WebResource.Details</h3></div>
                <div class="card-body col-md-12 row">
                    <div class="form-floating col-md-3">
                        <label for="InvoiceId">@WebResource.InvoiceNo</label>
                        <select asp-for="InvoiceId" class="form-control" disabled>
                        </select>
                        <span asp-validation-for="InvoiceId" class="text-danger"></span>
                    </div>
                    <div class="form-floating col-md-2">
                        <label for="Date">@WebResource.Date</label>
                        <input type="text" name="Date" id="Date" class="form-control datefield" aria-required="true" autocomplete="off" readonly />
                        <span asp-validation-for="Date" class="text-danger"></span>
                    </div>
                    <div class="form-floating col-md-4">
                        <label asp-for="Description">@WebResource.Description</label>
                        <input asp-for="Description" class="form-control" aria-required="true" autocomplete="off" readonly />
                        <span asp-validation-for="Date" class="text-danger"></span>
                    </div>
                </div>
            </div>
            
                <div class="card-body col-md-12 row">
                    <table id="tblItems" class="table table-striped table-bordered table-responsive">
                        <thead>
                    <tr>
                        <th class="col-md-3">@WebResource.Barcode</th>
                        <th class="col">@WebResource.Description</th>
                        <th class="col">@WebResource.Cost</th>
                        <th class="col">@WebResource.QtyDozen</th>
                        <th class="col">@WebResource.QtyPices</th>
                        <th class="col">@WebResource.VAT</th>
                        <th class="col">@WebResource.TotalVat</th>
                        <th class="col">@WebResource.Total</th>
                        @*<th class="col"></th>*@
                    </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>

        <div class="row card card-success" style="margin-top:20px; padding-top:7px;">
            <div class="row col-md-12">
                <div class="row col-md-6">
                    <div class="form-floating col-md-8" style="text-align:right;">
                        <label for="totDzn" style="margin-left:7px;">@WebResource.Total @WebResource.QtyDozen </label>
                    </div>
                    <div class="form-floating col-md-4">
                        <input type="text" readonly name="totDzn" id="totDzn" class="form-control" value="" data-val="0" style="text-align:right;" />
                    </div>
                </div>

                <div class="row col-md-6">
                    <div class="form-floating col-md-8" style="text-align:right;">
                        <label for="InvoiceVatTotbef" style="margin-left:7px;">@WebResource.Total before @WebResource.VAT </label>
                    </div>
                    <div class="form-floating col-md-4">
                        <input type="text" readonly name="VatAmountbef" id="VatAmountbef" class="form-control" value="" data-val="0" style="text-align:right;" />
                    </div>
                </div>
            </div>
            <div class="row col-md-12">
                <div class="row col-md-6">
                    <div class="form-floating col-md-8" style="text-align:right;">
                        <label for="totPcs" style="margin-left:7px;">@WebResource.Total @WebResource.QtyPices </label>
                    </div>
                    <div class="form-floating col-md-4">
                        <input type="text" readonly name="totPcs" id="totPcs" class="form-control" value="" data-val="0" style="text-align:right;" />
                    </div>
                </div>
                <div class="row col-md-6">
                    <div class="form-floating col-md-8" style="text-align:right;">
                        <label for="InvoiceVatTot" style="margin-left:7px;">@WebResource.VAT @WebResource.Total</label>
                    </div>
                    <div class="form-floating col-md-4">
                        <input readonly type="text" name="VatAmount" id="VatAmount" class="form-control" value="@Model.VatAmount" data-val="0" style="text-align:right;" />
                    </div>
                </div>
            </div>
            <div class="row col-md-12">
                <div class="row col-md-6"></div>
                <div class="row col-md-6">
                    <div class="form-floating col-md-8" style="text-align:right;">
                        <label for="Total" style="margin-left:7px;">@WebResource.Total</label>
                    </div>
                    <div class="form-floating col-md-4">
                        <input readonly type="text" name="Total" id="Total" class="form-control" value="@Model.Total" style="text-align:right;" />
                    </div>
                </div>

            </div>
        </div>

            <div class="row col-md-12">
                <div class="form-floating col-md-3">
                    <label asp-for="StoreId">@WebResource.Supplier</label>
                    <select asp-for="StoreId" class="form-control" asp-items="@ViewBag.Stores" disabled>
                    </select>
                    <span asp-validation-for="SupplierId" class="text-danger"></span>
                </div>
                <div class="form-floating col-md-2">
                    <label asp-for="Status">@WebResource.Status</label>
                    <select asp-for="Status" class="form-control" disabled>
                @if(Model.Status == true)
                {
                    <option value="true">@WebResource.Approved</option>
                    <option value="false">@WebResource.OnHold</option>
                }
                else
                {
                    <option value="false">@WebResource.OnHold</option>
                    <option value="true">@WebResource.Approved</option>
                }
                
                    </select>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>
            </div>
    </div>
    <hr />

</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script type="text/javascript">
        $("form").attr('autocomplete', 'off');

        $(".datefield").datepicker({
            dateFormat: 'yy-mm-dd',
            changeMonth: true,
            changeYear: true,
            todayHighlight: true,
            autoclose: true
        });

        var vatx = "@ViewBag.VatPercentage";
        GetSupplierInfo("@Model.SupplierId");
        GetReturnDetails("@Model.Id");
        $("#Date").val("@Model.Date.ToString("yyyy-MM-dd")")

        $('#SupplierId').select2();
        $('#InvoiceId').select2();
        $('#StoreId').select2();

        function GetSupplierInfo(Id) {
            if (parseInt(Id) > 0) {
                $.ajax({
                    url: "/Purchase/GetSupplierInfo/" + Id,
                    type: "GET",
                    success: function (data) {
                        var result = JSON.parse(JSON.stringify(data));
                        $("#BpCode").val(result.Bpcode);
                        $("#Address").val(result.Address);
                        $("#VatNo").val(result.VatNo);
                        $('#Balance').val(result.Balance);
                    },
                    error: function () {
                        swal({
                            type: 'error',
                            title: "@Html.Raw(WebResource.Oops)",
                            text: "@Html.Raw(WebResource.SomethingWentWrong)",
                        });
                    }
                });
                GetInvoiceListBySupplier(Id);
            }
            else {
                $("#Address").val('');
                $("#VatNo").val('');
                $('#Balance').val('');
                $("#InvoiceId option").remove();
            }
        }

        $('#SupplierId').change(function () {
            let Id = $(this).val();
            GetSupplierInfo(Id);
        });

        function GetInvoiceListBySupplier(Id) {
            $.ajax({
                url: "/Warehouse/GetInvoiceNoListBySupplier/" + Id,
                type: "GET",
                dataType: "json",
                success: function (data) {
                    var result = JSON.parse(JSON.stringify(data));
                    $("#InvoiceId option").remove();
                    var options = '<option value="">@WebResource.Select @WebResource.InvoiceNo</option>';
                    for (i = 0; i < result.length; i++) {
                        options += "<option valur='" + result[i].Id + "'>" + result[i].InvoiceNo + "</option>";
                    }
                    $("#InvoiceId").append(options);
                },
                error: function (result) {
                    console.log(result);
                }
            });
        }

        function GetReturnDetails(Id) {
            if (parseInt(Id) > 0) {
                $.ajax({
                    url: "/Warehouse/GetReturnItems/" + Id,
                    type: "GET",
                    dataType: "json",
                    success: function (data) {
                        var result = JSON.parse(JSON.stringify(data));
                        for (i = 0; i < result.length; i++) {
                            let itemId = result[i].Id;
                            let productId = parseInt(result[i].ProductId) > 0 ? result[i].ProductId : 0;
                            let code = result[i].Barcode;
                            let desc = result[i].DescriptionEnglish;
                            let descab = result[i].DescriptionArabic;

                            let qtyd = result[i].QtyDozen;
                            let qtyp = result[i].QtyPices;
                            let cost = result[i].Price;
                            let productVat = result[i].Vat;
                            let vattot = 0;
                            let total = 0;

                            if (parseFloat(productVat) > 0) {
                                productVat = parseFloat(productVat);
                            }
                            else {
                                productVat = 0;
                            }

                            if (parseFloat(qtyd) > 0) {
                                qtyd = parseFloat(qtyd);
                            }
                            else {
                                qtyd = 0;
                            }

                            if (parseFloat(qtyp) > 0) {
                                qtyp = parseFloat(qtyp);
                            }
                            else {
                                qtyp = 0;
                            }

                            if (parseFloat(qtyd) > 0 && parseFloat(qtyp) > 0) {
                                let totQty = ((parseFloat(qtyd) * 12) + parseFloat(qtyp));
                                total = (parseFloat(totQty) * parseFloat(cost));
                                vattot = (parseFloat(productVat) * parseFloat(totQty));
                            }
                            if (parseFloat(qtyd) > 0 && parseFloat(qtyp) == 0) {
                                let totQty = parseFloat(qtyd);
                                total = (parseFloat(totQty) * parseFloat(cost));
                                vattot = (parseFloat(productVat) * parseFloat(totQty));
                            }
                            if (parseFloat(qtyd) == 0 && parseFloat(qtyp) > 0) {
                                let totQty = parseFloat(qtyp);
                                total = (parseFloat(totQty) * parseFloat(cost));
                                vattot = (parseFloat(productVat) * parseFloat(totQty));
                            }

                            let itemCode = '<input type="hidden" name="ItemId" value="' + itemId + '" /><input type="hidden" name="ItemProductId" value="' + productId + '" /><input type="hidden" name="Barcode" value="' + code + '" />' + code;
                            let itemDesc = '<input type="hidden" name="ItemDescription" value="' + desc + '" /><input type="hidden" name="ItemDescriptionAb" value="' + descab + '" />' + desc + "/ " + descab;
                            let itemQtyD = '<input type="hidden"  class="itemQtyDx" name="QtyDozen" value="' + qtyd + '" />' + qtyd;
                            let itemQtyP = '<input type="hidden" class="itemQtyPx" name="QtyPices" value="' + qtyp + '" />' + qtyp;
                            let itemVat = '<input type="hidden" name="itemVat" value="' + productVat + '" /><input type="hidden" name="itemVatTotx" class="totVatx" value="' + vattot + '" />' + productVat.toFixed(2);

                            let itemCost = '<input type="hidden" name="itemCost" class="itemcostx" value="' + cost + '" />' + cost.toFixed(2);
                            let itemTotal = '<input type="hidden" name="itemTotal" class="itemtotx" value="' + total + '" />' + total.toFixed(2);
                            let btn = '<a class="removeRow" style="font-size:22px; padding:5px; cursor:pointer;" data-id="' + itemId + '"><i class="fa fa-times"></i></a>';

                            let rowId = "Row_" + Date.now() + "_" + new Date().getMilliseconds();
                            var itemCell = "<tr id='" + rowId + "'>";

                            itemCell += '<td>' + itemCode + '</td>';
                            itemCell += '<td>' + itemDesc + '</td>';
                            itemCell += '<td style="text-align:right;">' + itemCost + '</td>';
                            itemCell += '<td style="text-align:right;">' + itemQtyD + '</td>';
                            itemCell += '<td style="text-align:right;">' + itemQtyP + '</td>';
                            itemCell += '<td style="text-align:right;">' + itemVat + '</td>';
                            itemCell += '<td>' + vattot.toFixed(2) + '</td>';
                            itemCell += '<td class="itemtotlx" style="text-align:right;">' + itemTotal + '</td>';
                            //itemCell += '<td>' + btn + '</td>';
                            itemCell += '</tr>';

                            $('#tblItems tbody').append(itemCell);
                        }
                        CalculateTotal();
                    },
                    error: function (result) {
                        console.log(result);
                    }
                });
            }
        }

        function CalculateTotal() {
            let tot = 0;
            let totwithoutVat = 0;
            let totVat = 0;
            var totalDzns = 0;
            var totalPcss = 0;

            $(".totVatx").each(function () {
                let curVat = $(this).val();
                if (parseFloat(curVat) > 0) {
                    totVat = (parseFloat(totVat) + parseFloat(curVat));
                }
            });

            $(".itemtotx").each(function () {
                let curtot = $(this).val();
                if (parseFloat(curtot) > 0) {
                    totwithoutVat = (parseFloat(totwithoutVat) + parseFloat(curtot));
                }
            });

            $(".itemQtyDx").each(function () {
                var valDznx = $(this).val();
                if (parseFloat(valDznx) > 0) {
                    totalDzns = parseFloat(totalDzns) + parseFloat(valDznx);
                }
            });

            $(".itemQtyPx").each(function () {
                var valPcsx = $(this).val();
                if (parseFloat(valPcsx) > 0) {
                    totalPcss = parseFloat(totalPcss) + parseFloat(valPcsx);
                }
            });

            $("#totDzn").val(totalDzns.toFixed(2));
            $("#totDzn").attr('data-val', totalDzns.toFixed(2));

            $("#totPcs").val(totalPcss.toFixed(2));
            $("#totPcs").attr('data-val', totalPcss.toFixed(2));

            $("#VatAmountbef").val(totwithoutVat.toFixed(2));
            $("#VatAmountbef").attr('data-val', totwithoutVat.toFixed(2));

            var totalVat = parseFloat(totwithoutVat) * (parseFloat(vatx) / parseFloat(100));

            tot = (parseFloat(totwithoutVat) + parseFloat(totalVat));

            $("#VatAmount").val(totalVat.toFixed(2));
            $("#Total").val(tot.toFixed(2));

        }


        function ViewDoc()
        {
            var docPath = "@documentPath";

          var object = "<object data=\"{FileName}\" type=\"application/pdf\" width=\"500px\" height=\"300px\">";
          object += "</object>";
          object = object.replace(/{FileName}/g, docPath);
          $("#ReturnDoc").html(object);
          $(".ui-dialog-titlebar-close").html("<span style='position: absolute;top: -2px;left: 3px;'>X</span>");
        }

        ViewDoc();

    </script>
}